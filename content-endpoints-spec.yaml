# Content API Endpoints - UNIFIED-CONTENT-SPEC Implementation
# Exact implementation per docs/UNIFIED-CONTENT-SPEC.md

openapi: 3.0.0
info:
  title: Neutale Content API - Unified Spec
  version: 1.0.0
  description: |
    Content delivery endpoints following UNIFIED-CONTENT-SPEC.md exactly.
    
    **R2 Storage Structure:**
    ```
    stories/{story-id}/{language}/
      ├── metadata.json
      ├── content/chapter1.json, chapter2.json, ...
      └── assets/images/cover.jpg, thumbnail.jpg
      └── assets/audio/chapter1.wav, chapter2.wav
    ```

servers:
  - url: https://audiobook-dev.sunny250486.workers.dev
    description: Development environment

paths:
  /api/content/{storyId}/metadata/{language}:
    get:
      tags:
        - Content
      summary: Get story metadata
      description: |
        Returns story metadata directly from R2 `metadata.json` file.
        
        **Exact format per UNIFIED-CONTENT-SPEC.md:**
        ```json
        {
          "id": "story-id",
          "title": "Story Title",
          "author": "AI Story Weaver",
          "description": "Story description...",
          "coverImage": "https://audiobook-dev.sunny250486.workers.dev/api/content/{storyId}/image/{language}/cover.jpg",
          "thumbnail": "https://audiobook-dev.sunny250486.workers.dev/api/content/{storyId}/image/{language}/thumbnail.jpg", 
          "originLanguage": "en",
          "supportedLanguages": ["en"],
          "totalChapters": 5,
          "genre": "Fantasy",
          "readingTime": 45,
          "tags": ["fantasy", "adventure"],
          "status": "published"
        }
        ```
        
        **Key Points:**
        - Serves R2 `stories/{storyId}/{language}/metadata.json` directly
        - No chapters array (use chapter endpoint instead)
        - `totalChapters` indicates available chapters
        - Image URLs converted to full absolute URLs
        
      parameters:
        - name: storyId
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-z0-9][a-z0-9-]{0,48}[a-z0-9]$'
          description: Story identifier (lowercase with hyphens)
          example: "whispers-of-the-hidden-realm"
        - name: language
          in: path
          required: true
          schema:
            type: string
            pattern: '^[a-z]{2}$'
          description: Language code
          example: "en"
      responses:
        '200':
          description: Story metadata from R2 storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryMetadata'
              example:
                id: "whispers-of-the-hidden-realm"
                title: "Whispers of the Hidden Realm"
                author: "AI Story Weaver"
                description: "A mystical adventure through hidden realms..."
                coverImage: "https://audiobook-dev.sunny250486.workers.dev/api/content/whispers-of-the-hidden-realm/image/en/cover.jpg"
                thumbnail: "https://audiobook-dev.sunny250486.workers.dev/api/content/whispers-of-the-hidden-realm/image/en/thumbnail.jpg"
                originLanguage: "en"
                supportedLanguages: ["en"]
                totalChapters: 8
                genre: "Fantasy"
                readingTime: 45
                tags: ["fantasy", "adventure", "mystical"]
                status: "published"
        '404':
          description: Story not found in R2 storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example:
                error:
                  code: "STORY_NOT_FOUND"
                  message: "Story with ID 'invalid-story' not found"
                  details:
                    storyId: "invalid-story"
                    language: "en"

  /api/content/{storyId}/chapter/{language}/{filename}:
    get:
      tags:
        - Content
      summary: Get chapter content
      description: |
        Returns chapter content directly from R2 `content/chapterN.json` file.
        
        **Exact format per UNIFIED-CONTENT-SPEC.md:**
        ```json
        {
          "chapterNumber": 1,
          "title": "Chapter Title",
          "blocks": [
            {
              "type": "heading",
              "content": "Chapter Title",
              "level": 1
            },
            {
              "type": "paragraph", 
              "content": "Chapter content text..."
            }
          ]
        }
        ```
        
      parameters:
        - name: storyId
          in: path
          required: true
          schema:
            type: string
          description: Story identifier
          example: "whispers-of-the-hidden-realm"
        - name: language
          in: path
          required: true
          schema:
            type: string
          description: Language code
          example: "en"
        - name: filename
          in: path
          required: true
          schema:
            type: string
            pattern: '^chapter\d+\.json$'
          description: Chapter filename (chapterN.json format)
          example: "chapter1.json"
      responses:
        '200':
          description: Chapter content from R2 storage
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChapterContent'
        '400':
          description: Invalid filename format
        '404':
          description: Chapter not found

  /api/content/{storyId}/image/{language}/{filename}:
    get:
      tags:
        - Content
      summary: Get story images
      description: |
        Serves images directly from R2 `assets/images/` directory.
        
        **Common files:** cover.jpg, thumbnail.jpg
        
      parameters:
        - name: storyId
          in: path
          required: true
          schema:
            type: string
          example: "whispers-of-the-hidden-realm"
        - name: language
          in: path
          required: true
          schema:
            type: string
          example: "en"
        - name: filename
          in: path
          required: true
          schema:
            type: string
          description: Image filename
          example: "cover.jpg"
      responses:
        '200':
          description: Image file
          content:
            image/*:
              schema:
                type: string
                format: binary
          headers:
            Cache-Control:
              schema:
                type: string
              example: "public, max-age=86400"
        '404':
          description: Image not found

  /api/content/{storyId}/audio/{language}/{filename}:
    get:
      tags:
        - Content
      summary: Get audio files
      description: |
        Serves audio files directly from R2 `assets/audio/` directory.
        
        **Filename format per UNIFIED-CONTENT-SPEC:** chapter1.wav, chapter2.wav, ...
        
      parameters:
        - name: storyId
          in: path
          required: true
          schema:
            type: string
          example: "whispers-of-the-hidden-realm"
        - name: language
          in: path
          required: true
          schema:
            type: string
          example: "en"
        - name: filename
          in: path
          required: true
          schema:
            type: string
            pattern: '^chapter\d+\.(wav|mp3|ogg)$'
          description: Audio filename (chapterN.wav format per spec)
          example: "chapter1.wav"
      responses:
        '200':
          description: Audio file
          content:
            audio/*:
              schema:
                type: string
                format: binary
          headers:
            Accept-Ranges:
              schema:
                type: string
              example: "bytes"
            Cache-Control:
              schema:
                type: string
              example: "public, max-age=86400"
        '404':
          description: Audio file not found

components:
  schemas:
    StoryMetadata:
      type: object
      description: Story metadata exactly as stored in R2 metadata.json
      required:
        - id
        - title
        - author
        - description
        - originLanguage
        - supportedLanguages
        - totalChapters
        - genre
        - status
      properties:
        id:
          type: string
          description: Unique story identifier
          example: "whispers-of-the-hidden-realm"
        title:
          type: string
          description: Story title
          example: "Whispers of the Hidden Realm"
        author:
          type: string
          description: Story author
          example: "AI Story Weaver"
        description:
          type: string
          description: Story description
          example: "A mystical adventure through hidden realms..."
        coverImage:
          type: string
          description: Full URL to cover image
          example: "https://audiobook-dev.sunny250486.workers.dev/api/content/story-id/image/en/cover.jpg"
        thumbnail:
          type: string
          description: Full URL to thumbnail image
          example: "https://audiobook-dev.sunny250486.workers.dev/api/content/story-id/image/en/thumbnail.jpg"
        originLanguage:
          type: string
          description: Original language of the story
          example: "en"
        supportedLanguages:
          type: array
          items:
            type: string
          description: Available language codes
          example: ["en"]
        totalChapters:
          type: integer
          minimum: 1
          description: Total number of chapters (for navigation)
          example: 8
        genre:
          type: string
          description: Story genre
          example: "Fantasy"
        readingTime:
          type: integer
          description: Estimated reading time in minutes
          example: 45
        tags:
          type: array
          items:
            type: string
          description: Story tags
          example: ["fantasy", "adventure"]
        status:
          type: string
          enum: ["draft", "published", "archived"]
          description: Publication status
          example: "published"

    ChapterContent:
      type: object
      description: Chapter content exactly as stored in R2 content/chapterN.json
      required:
        - chapterNumber
        - title
        - blocks
      properties:
        chapterNumber:
          type: integer
          minimum: 1
          description: Chapter number (starting from 1)
          example: 1
        title:
          type: string
          description: Chapter title
          example: "The Mysterious Beginning"
        blocks:
          type: array
          items:
            $ref: '#/components/schemas/ContentBlock'
          description: Ordered content blocks

    ContentBlock:
      type: object
      description: Individual content block within a chapter
      required:
        - type
        - content
      properties:
        type:
          type: string
          enum: ["paragraph", "heading"]
          description: Block type per UNIFIED-CONTENT-SPEC
        content:
          type: string
          description: Block content text
          example: "Once upon a time in a mystical realm..."
        level:
          type: integer
          minimum: 1
          maximum: 6
          description: Heading level (only for heading blocks)
          example: 1

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Error code
              example: "STORY_NOT_FOUND"
            message:
              type: string
              description: Human-readable error message
              example: "Story with ID 'invalid-story' not found"
            details:
              type: object
              description: Additional error context
              example:
                storyId: "invalid-story"
                language: "en"