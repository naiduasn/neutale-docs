openapi: 3.0.3
info:
  title: Neutale Audiobook Platform - Admin API
  description: |
    Administrative API specification for system management, migrations, and debugging.
    
    ## Admin Use Cases
    
    This API provides endpoints for:
    - **Database Migrations**: Schema updates and data transformations  
    - **System Health**: Database validation and health monitoring
    - **Debug Tools**: Development debugging and troubleshooting
    - **Billing Management**: Webhook simulation and reconciliation
    - **Content Management**: Bulk operations and data validation
    - **Analytics**: System metrics and usage statistics
    
    ## Individual Story Architecture v4.0 Support
    
    All migration and admin tools support the new Individual Story Architecture:
    - Migration between legacy and v4.0 architectures
    - Language group validation and repair
    - Translation quality auditing  
    - Content integrity verification
    
    ## Security & Access Control
    
    - **Production Restriction**: Debug endpoints disabled in production
    - **Admin Authentication**: Requires elevated privileges
    - **Audit Logging**: All admin actions are logged
    - **Rate Limiting**: Admin endpoints have strict rate limits
    
    ## Environment Awareness
    
    - **Development**: Full debug access with detailed logging
    - **Staging**: Limited admin tools for testing
    - **Production**: Restricted access, audit trails required
    
  version: 4.0.0
  contact:
    name: Neutale Admin Support
    email: admin@neutale.com
  license:
    name: Proprietary

servers:
  - url: https://audiobook-dev.sunny250486.workers.dev
    description: Development environment
  - url: https://audiobook-prod.sunny250486.workers.dev
    description: Production environment (restricted)

security:
  - bearerAuth: []
  - adminKeyAuth: []

paths:
  # Database Migration
  /api/migrate:
    get:
      tags:
        - Migration
      summary: Get migration status
      description: |
        Check current database schema version and available migrations.
        
        **Individual Story Architecture v4.0:**
        - Shows legacy vs v4.0 migration status
        - Language group consistency checks
        - Translation data integrity status
        
      operationId: getMigrationStatus
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Migration status retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  current_version:
                    type: string
                    example: "0016"
                  available_migrations:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "0016_individual_story_multilanguage"
                        description:
                          type: string
                        applied:
                          type: boolean
                        applied_at:
                          type: string
                          format: date-time
                          nullable: true
                  schema_status:
                    type: object
                    properties:
                      individual_story_architecture:
                        type: boolean
                        description: Whether v4.0 schema is applied
                      language_groups_consistent:
                        type: boolean
                      translation_data_integrity:
                        type: boolean
                  pending_migrations:
                    type: array
                    items:
                      type: string
                  last_migration:
                    type: object
                    nullable: true
                    properties:
                      id:
                        type: string
                      applied_at:
                        type: string
                        format: date-time
                      duration:
                        type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - Migration
      summary: Execute database migration
      description: |
        Execute a specific database migration.
        
        **Critical Operations:**
        - Individual Story Architecture v4.0 migration
        - Language group creation and validation
        - Legacy data transformation
        - Translation quality indexing
        
        ‚ö†Ô∏è **Warning**: Always backup database before running migrations
        
      operationId: executeMigration
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - migration_id
              properties:
                migration_id:
                  type: string
                  example: "0016_individual_story_multilanguage"
                dry_run:
                  type: boolean
                  default: false
                  description: Preview changes without applying
                force:
                  type: boolean
                  default: false
                  description: Force migration even if preconditions fail
                batch_size:
                  type: integer
                  description: Batch size for large data migrations
                  default: 1000
                options:
                  type: object
                  description: Migration-specific options
                  properties:
                    preserve_legacy_data:
                      type: boolean
                      default: true
                    validate_translations:
                      type: boolean
                      default: true
                    generate_language_groups:
                      type: boolean
                      default: true
      responses:
        '200':
          description: Migration executed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  migration_id:
                    type: string
                  execution_time:
                    type: string
                    example: "45.2s"
                  changes:
                    type: object
                    properties:
                      rows_affected:
                        type: integer
                      tables_modified:
                        type: array
                        items:
                          type: string
                      indexes_created:
                        type: integer
                      language_groups_created:
                        type: integer
                        description: For Individual Story Architecture migrations
                  validation_results:
                    type: object
                    properties:
                      data_integrity:
                        type: boolean
                      constraint_violations:
                        type: integer
                      orphaned_records:
                        type: integer
        '400':
          description: Migration failed or invalid parameters
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Error'
                  - type: object
                    properties:
                      migration_errors:
                        type: array
                        items:
                          type: object
                          properties:
                            step:
                              type: string
                            error:
                              type: string
                            sql:
                              type: string
                              nullable: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # System Health & Debugging
  /api/debug/db-check:
    get:
      tags:
        - Debug Tools
      summary: Database health check
      description: |
        **Development Only** - Comprehensive database validation.
        
        **Individual Story Architecture v4.0 Validation:**
        - Language group consistency
        - Translation integrity checks
        - Orphaned record detection
        - Schema compliance verification
        
        üö´ **Disabled in production** for security
        
      operationId: databaseHealthCheck
      security:
        - bearerAuth: []
      parameters:
        - name: deep_check
          in: query
          description: Perform expensive deep validation
          schema:
            type: boolean
            default: false
        - name: check_translations
          in: query
          description: Validate translation relationships
          schema:
            type: boolean
            default: true
        - name: check_content_integrity
          in: query
          description: Verify content file references
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Health check completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  overall_health:
                    type: string
                    enum: [healthy, warning, error]
                  database_info:
                    type: object
                    properties:
                      total_stories:
                        type: integer
                      total_users:
                        type: integer
                      schema_version:
                        type: string
                      architecture_version:
                        type: string
                        example: "individual-v4.0"
                  checks:
                    type: object
                    properties:
                      story_integrity:
                        $ref: '#/components/schemas/HealthCheckResult'
                      user_data_consistency:
                        $ref: '#/components/schemas/HealthCheckResult'  
                      language_groups:
                        $ref: '#/components/schemas/HealthCheckResult'
                      translation_consistency:
                        $ref: '#/components/schemas/HealthCheckResult'
                      content_references:
                        $ref: '#/components/schemas/HealthCheckResult'
                      orphaned_records:
                        $ref: '#/components/schemas/HealthCheckResult'
                  recommendations:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                          enum: [performance, data_integrity, migration, cleanup]
                        priority:
                          type: string
                          enum: [high, medium, low]
                        title:
                          type: string
                        description:
                          type: string
                        action:
                          type: string
                          description: Recommended API call or action
                  last_checked:
                    type: string
                    format: date-time
        '404':
          description: Debug endpoints not available (production environment)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/debug/simulate-webhook:
    post:
      tags:
        - Debug Tools
      summary: Simulate billing webhook
      description: |
        **Development Only** - Simulate Dodo Payments webhooks for testing.
        
        **Webhook Types:**
        - Payment completed
        - Subscription created/cancelled  
        - Payment failed
        - Subscription expired
        
        üö´ **Disabled in production** for security
        
      operationId: simulateWebhook  
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - event_type
                - payload
              properties:
                event_type:
                  type: string
                  enum: 
                    - payment.completed
                    - subscription.created
                    - subscription.cancelled
                    - subscription.expired
                    - payment.failed
                  example: "subscription.created"
                payload:
                  type: object
                  description: Event payload (varies by event type)
                  example:
                    customer_id: "cus_test123"
                    subscription_id: "sub_test456" 
                    plan_id: "plan_monthly_premium"
                    status: "active"
                user_id:
                  type: string
                  description: Target user ID for simulation
                  example: "user_123"
                delay_seconds:
                  type: integer
                  description: Delay before webhook execution
                  minimum: 0
                  maximum: 60
                  default: 0
      responses:
        '200':
          description: Webhook simulation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  simulation_id:
                    type: string
                  event_type:
                    type: string
                  processed_at:
                    type: string
                    format: date-time
                  webhook_response:
                    type: object
                    properties:
                      status_code:
                        type: integer
                      processing_time:
                        type: string
                      changes_applied:
                        type: array
                        items:
                          type: string
                      errors:
                        type: array
                        items:
                          type: string
        '404':
          description: Debug endpoints not available (production environment)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  # Content Management
  /api/migrate/validate-content:
    post:
      tags:
        - Content Management
      summary: Validate story content integrity
      description: |
        Validate story content files and metadata consistency.
        
        **Individual Story Architecture v4.0 Validation:**
        - Language-specific content validation
        - Asset reference integrity  
        - Chapters manifest accuracy
        - Translation completeness
        
      operationId: validateContent
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: string
                  description: Specific story to validate (optional)
                  example: "future-flavors-unveiled-es"
                language:
                  type: string
                  description: Specific language to validate (optional)
                  pattern: '^[a-z]{2}$'
                validation_type:
                  type: string
                  enum: [quick, comprehensive, deep]
                  default: quick
                  description: Validation depth
                check_assets:
                  type: boolean
                  default: true
                  description: Validate asset files exist in R2
                fix_issues:
                  type: boolean
                  default: false
                  description: Automatically fix detected issues
      responses:
        '200':
          description: Content validation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  validation_summary:
                    type: object
                    properties:
                      stories_checked:
                        type: integer
                      issues_found:
                        type: integer
                      issues_fixed:
                        type: integer
                      validation_time:
                        type: string
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        story_id:
                          type: string
                        language:
                          type: string
                        status:
                          type: string
                          enum: [valid, warning, error]
                        issues:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                enum: [missing_content, invalid_asset, metadata_mismatch, translation_gap]
                              severity:
                                type: string
                                enum: [low, medium, high, critical]
                              description:
                                type: string
                              file_path:
                                type: string
                                nullable: true
                              fixed:
                                type: boolean
                                default: false
                  recommendations:
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/migrate/repair-language-groups:
    post:
      tags:
        - Content Management
      summary: Repair language group relationships
      description: |
        **Individual Story Architecture v4.0** - Repair and rebuild language group relationships.
        
        **Operations:**
        - Detect orphaned translations
        - Rebuild language_group_id relationships
        - Fix master story assignments
        - Validate translation quality scores
        
      operationId: repairLanguageGroups
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                dry_run:
                  type: boolean
                  default: true
                  description: Preview changes without applying
                language_group_id:
                  type: string
                  description: Specific language group to repair (optional)
                  example: "future-flavors-unveiled"
                operations:
                  type: array
                  items:
                    type: string
                    enum: 
                      - rebuild_groups
                      - fix_orphaned_translations
                      - update_master_assignments
                      - validate_quality_scores
                  default: ["rebuild_groups", "fix_orphaned_translations"]
                validation_level:
                  type: string
                  enum: [strict, normal, permissive]
                  default: normal
      responses:
        '200':
          description: Language group repair completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  dry_run:
                    type: boolean
                  operations_performed:
                    type: array
                    items:
                      type: string
                  changes:
                    type: object
                    properties:
                      language_groups_created:
                        type: integer
                      orphaned_translations_fixed:
                        type: integer
                      master_assignments_updated:
                        type: integer
                      quality_scores_validated:
                        type: integer
                  affected_stories:
                    type: array
                    items:
                      type: object
                      properties:
                        story_id:
                          type: string
                        language:
                          type: string
                        changes_applied:
                          type: array
                          items:
                            type: string
                  validation_results:
                    type: object
                    properties:
                      consistency_check:
                        type: boolean
                      data_integrity:
                        type: boolean
                      warnings:
                        type: array
                        items:
                          type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  # Analytics & Monitoring
  /api/admin/analytics/system-metrics:
    get:
      tags:
        - Analytics
      summary: Get system performance metrics
      description: |
        Retrieve comprehensive system metrics and usage statistics.
        
        **Metrics Included:**
        - Database performance and query statistics
        - R2 storage usage and access patterns
        - Individual Story Architecture v4.0 adoption metrics
        - Translation quality distribution
        - User engagement and content consumption
        
      operationId: getSystemMetrics
      security:
        - bearerAuth: []
      parameters:
        - name: timeframe
          in: query
          description: Metrics timeframe
          schema:
            type: string
            enum: [1hour, 24hours, 7days, 30days]
            default: 24hours
        - name: metrics
          in: query
          description: Specific metrics to include (comma-separated)
          schema:
            type: string
            example: "database,storage,translations,user_activity"
      responses:
        '200':
          description: System metrics retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  timeframe:
                    type: string
                  generated_at:
                    type: string
                    format: date-time
                  database_metrics:
                    type: object
                    properties:
                      total_stories:
                        type: integer
                      stories_by_architecture:
                        type: object
                        properties:
                          individual_v4:
                            type: integer
                          legacy:
                            type: integer
                      query_performance:
                        type: object
                        properties:
                          average_response_time:
                            type: string
                          slow_queries:
                            type: integer
                      connection_pool:
                        type: object
                        properties:
                          active_connections:
                            type: integer
                          max_connections:
                            type: integer
                  storage_metrics:
                    type: object
                    properties:
                      total_size:
                        type: integer
                        description: Total storage in bytes
                      objects_count:
                        type: integer
                      bandwidth_usage:
                        type: integer
                        description: Bandwidth usage in bytes
                      cache_hit_rate:
                        type: number
                        description: CDN cache hit percentage
                  translation_metrics:
                    type: object
                    properties:
                      total_language_groups:
                        type: integer
                      languages_available:
                        type: integer
                      translation_coverage:
                        type: object
                        additionalProperties:
                          type: integer
                      quality_distribution:
                        type: object
                        properties:
                          high_quality:
                            type: integer
                            description: Translations with quality > 80
                          medium_quality:
                            type: integer
                            description: Translations with quality 60-80
                          low_quality:
                            type: integer
                            description: Translations with quality < 60
                  user_activity_metrics:
                    type: object
                    properties:
                      active_users:
                        type: integer
                      new_registrations:
                        type: integer
                      content_consumption:
                        type: object
                        properties:
                          stories_read:
                            type: integer
                          audio_minutes_streamed:
                            type: integer
                          bookmarks_created:
                            type: integer
                      subscription_metrics:
                        type: object
                        properties:
                          active_subscriptions:
                            type: integer
                          conversion_rate:
                            type: number
                          churn_rate:
                            type: number
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  # Billing Administration
  /api/admin/billing/reconcile:
    post:
      tags:
        - Billing Management
      summary: Reconcile billing data
      description: |
        Reconcile local billing data with Dodo Payments platform.
        
        **Reconciliation Operations:**
        - Compare local vs Dodo subscription states
        - Identify discrepancies in payment records
        - Sync missing webhook events
        - Fix subscription status mismatches
        
      operationId: reconcileBilling
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reconciliation_type:
                  type: string
                  enum: [subscriptions, payments, all]
                  default: all
                date_range:
                  type: object
                  properties:
                    start_date:
                      type: string
                      format: date
                    end_date:
                      type: string
                      format: date
                dry_run:
                  type: boolean
                  default: true
                fix_discrepancies:
                  type: boolean
                  default: false
                  description: Automatically fix detected discrepancies
      responses:
        '200':
          description: Billing reconciliation completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  reconciliation_summary:
                    type: object
                    properties:
                      records_checked:
                        type: integer
                      discrepancies_found:
                        type: integer
                      discrepancies_fixed:
                        type: integer
                      processing_time:
                        type: string
                  discrepancies:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          enum: [subscription_status, payment_amount, missing_webhook, duplicate_record]
                        user_id:
                          type: string
                        local_value:
                          type: string
                        dodo_value:
                          type: string
                        severity:
                          type: string
                          enum: [low, medium, high, critical]
                        fixed:
                          type: boolean
                        recommendation:
                          type: string
                  next_steps:
                    type: array
                    items:
                      type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  schemas:
    HealthCheckResult:
      type: object
      properties:
        status:
          type: string
          enum: [pass, warning, fail]
        message:
          type: string
        details:
          type: object
          nullable: true
        checked_at:
          type: string
          format: date-time
        execution_time:
          type: string
          nullable: true
    
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              nullable: true
            timestamp:
              type: string
              format: date-time
            request_id:
              type: string
              nullable: true

  responses:
    BadRequest:
      description: Bad request - invalid parameters or operation not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Unauthorized:
      description: Unauthorized - admin privileges required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Forbidden - operation not allowed in this environment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Admin JWT token with elevated privileges
    
    adminKeyAuth:
      type: apiKey
      in: header
      name: X-Admin-Key
      description: Administrative API key for system operations

tags:
  - name: Migration
    description: Database schema migrations and data transformations
  - name: Debug Tools
    description: Development debugging and system validation (dev environment only)
  - name: Content Management
    description: Bulk content operations and integrity validation
  - name: Analytics
    description: System metrics, performance monitoring, and usage analytics
  - name: Billing Management
    description: Administrative billing operations and reconciliation