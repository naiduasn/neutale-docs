openapi: 3.0.3
info:
  title: Neutale Audiobook Platform - UI/Frontend API
  description: API specification for frontend client integration and user-facing features.
  version: 4.1.1
  contact:
    name: Neutale API Support
    email: support@neutale.com
  license:
    name: Proprietary
servers:
  - url: https://audiobook-dev.sunny250486.workers.dev
    description: Development environment
  - url: https://audiobook-prod.sunny250486.workers.dev
    description: Production environment
components:
  schemas:
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          description: Health status of the API
          example: ok
        timestamp:
          type: string
          description: ISO 8601 timestamp of the health check
          example: 2025-09-16T12:00:00.000Z
        version:
          type: string
          description: Current API version
          example: 4.1.1
        environment:
          type: string
          description: Current environment (development, production, etc.)
          example: development
      required:
        - status
        - timestamp
        - version
    Story:
      type: object
      properties:
        id:
          type: string
          description: Unique story identifier
          example: story_abc123
        title:
          type: string
          description: Story title
          example: The Adventure Begins
        author:
          type: string
          description: Author name
          example: Jane Doe
        description:
          type: string
          description: Story description
          example: An exciting tale of adventure and discovery
        genre:
          type: string
          description: Story genre
          example: Fantasy
        origin_language:
          type: string
          description: Original language code
          example: en
        total_chapters:
          type: integer
          description: Total number of chapters
          example: 12
        reading_time:
          type: integer
          description: Estimated reading time in minutes
          example: 180
        status:
          type: string
          enum:
            - draft
            - published
            - archived
          description: Story publication status
          example: published
        cover_image_url:
          type: string
          format: uri
          description: Cover image URL
          example: https://example.com/cover.jpg
        thumbnail_url:
          type: string
          format: uri
          description: Thumbnail image URL
          example: https://example.com/thumb.jpg
        created_at:
          type: number
          description: Creation timestamp
          example: 1634567890
        updated_at:
          type: number
          description: Last update timestamp
          example: 1634567890
        avg_content_rating:
          type: number
          minimum: 1
          maximum: 5
          description: Average content rating (1-5)
          example: 4.2
        avg_audio_rating:
          type: number
          minimum: 1
          maximum: 5
          description: Average audio rating (1-5)
          example: 4.5
        review_count:
          type: integer
          description: Number of reviews
          example: 42
        language_group_id:
          type: string
          description: Language group identifier for translations
          example: group_xyz789
        language:
          type: string
          description: Current story language
          example: en
        is_master:
          type: integer
          minimum: 0
          maximum: 1
          description: Whether this is the master language version (1=yes, 0=no)
          example: 1
        has_audio:
          type: boolean
          description: Whether the story has audio available
          example: true
        audio_chapters_count:
          type: integer
          description: Number of chapters with audio
          example: 8
        total_audio_duration:
          type: number
          description: Total audio duration in seconds
          example: 3600
      required:
        - id
        - title
        - language
    StoriesListResponse:
      type: object
      properties:
        stories:
          type: array
          items:
            $ref: "#/components/schemas/Story"
        total_count:
          type: integer
          description: Total number of stories matching filters
          example: 150
        page:
          type: integer
          description: Current page number
          example: 1
        limit:
          type: integer
          description: Number of stories per page
          example: 20
        query_metadata:
          type: object
          properties:
            language:
              type: string
              description: Language filter applied
              example: en
            genre:
              type: string
              description: Genre filter applied
              example: Fantasy
            search:
              type: string
              description: Search query applied
              example: adventure
          required:
            - language
      required:
        - stories
        - total_count
        - page
        - limit
    UserProgress:
      type: object
      properties:
        user_id:
          type: string
          description: User ID
          example: user_123
        story_id:
          type: string
          description: Story ID
          example: story_abc123
        language:
          type: string
          description: Language code
          example: en
        current_chapter:
          type: integer
          minimum: 1
          description: Current chapter number
          example: 3
        current_chapter_progress:
          type: number
          minimum: 0
          maximum: 1
          description: Progress within current chapter (0.0-1.0)
          example: 0.75
        total_progress:
          type: number
          minimum: 0
          maximum: 1
          description: Total story progress (0.0-1.0)
          example: 0.42
        current_audio_position:
          type: number
          description: Current audio position in seconds
          example: 1234.5
        total_audio_position:
          type: number
          description: Total audio position in seconds
          example: 5678.9
        reading_mode:
          type: string
          enum:
            - read
            - listen
            - mixed
          description: Reading mode preference
          example: listen
        last_accessed_at:
          type: string
          description: Last access timestamp
          example: 2025-09-16T12:00:00Z
        started_at:
          type: string
          description: When user started reading/listening
          example: 2025-09-15T08:00:00Z
        completed_at:
          type: string
          nullable: true
          description: When user completed the story (null if not completed)
          example: null
      required:
        - user_id
        - story_id
        - language
        - current_chapter
        - current_chapter_progress
        - total_progress
        - current_audio_position
        - total_audio_position
        - reading_mode
        - last_accessed_at
        - started_at
        - completed_at
    UserProgressResponse:
      type: object
      properties:
        progress:
          type: array
          items:
            $ref: "#/components/schemas/UserProgress"
        total_count:
          type: integer
          description: Total number of progress records
          example: 15
      required:
        - progress
        - total_count
    ProgressUpdateResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        progress:
          $ref: "#/components/schemas/UserProgress"
      required:
        - success
        - progress
    ProgressUpdateRequest:
      type: object
      properties:
        language:
          type: string
          description: Language code
          example: en
        current_chapter:
          type: integer
          minimum: 1
          description: Current chapter number
          example: 3
        current_chapter_progress:
          type: number
          minimum: 0
          maximum: 1
          description: Progress within current chapter (0.0-1.0)
          example: 0.75
        current_audio_position:
          type: number
          description: Current audio position in seconds
          example: 1234.5
        reading_mode:
          type: string
          enum:
            - read
            - listen
            - mixed
          description: Reading mode preference
          example: listen
        session_data:
          type: object
          properties:
            platform:
              type: string
              enum:
                - web
                - mobile
                - tablet
              description: Platform type
              example: mobile
            device_info:
              type: string
              description: Device information
              example: iPhone 12
            session_duration:
              type: number
              description: Session duration in seconds
              example: 3600
          required:
            - platform
      required:
        - language
        - current_chapter
        - current_chapter_progress
        - reading_mode
    Bookmark:
      type: object
      properties:
        id:
          type: string
          description: Bookmark ID
          example: bookmark_123
        user_id:
          type: string
          description: User ID
          example: user_123
        story_id:
          type: string
          description: Story ID
          example: story_abc123
        language:
          type: string
          description: Language code
          example: en
        chapter_number:
          type: integer
          description: Chapter number
          example: 2
        position_in_chapter:
          type: number
          minimum: 0
          maximum: 1
          description: Position within chapter (0.0-1.0)
          example: 0.5
        audio_position:
          type: number
          description: Audio position in seconds
          example: 567.8
        note:
          type: string
          description: User note/comment
          example: Great character development here
        created_at:
          type: string
          description: Creation timestamp
          example: 2025-09-16T12:00:00Z
      required:
        - id
        - user_id
        - story_id
        - language
        - chapter_number
        - position_in_chapter
        - created_at
    BookmarksResponse:
      type: object
      properties:
        bookmarks:
          type: array
          items:
            $ref: "#/components/schemas/Bookmark"
        total_count:
          type: integer
          description: Total number of bookmarks
          example: 25
      required:
        - bookmarks
        - total_count
    UserLibraryItem:
      type: object
      properties:
        story_id:
          type: string
          description: Story ID
          example: story_abc123
        title:
          type: string
          description: Story title
          example: The Adventure Begins
        author:
          type: string
          description: Author name
          example: Jane Doe
        genre:
          type: string
          description: Story genre
          example: Fantasy
        cover_image_url:
          type: string
          format: uri
          description: Cover image URL
          example: https://example.com/cover.jpg
        added_to_library_at:
          type: string
          description: When added to library
          example: 2025-09-16T12:00:00Z
        last_read_at:
          type: string
          description: Last read timestamp
          example: 2025-09-16T12:00:00Z
        total_progress:
          type: number
          minimum: 0
          maximum: 1
          description: Total reading progress (0.0-1.0)
          example: 0.42
        is_favorite:
          type: boolean
          description: Whether story is marked as favorite
          example: true
      required:
        - story_id
        - title
        - author
        - genre
        - added_to_library_at
        - total_progress
        - is_favorite
    UserLibraryResponse:
      type: object
      properties:
        library:
          type: array
          items:
            $ref: "#/components/schemas/UserLibraryItem"
        total_count:
          type: integer
          description: Total number of library items
          example: 42
      required:
        - library
        - total_count
    StoryType:
      type: object
      properties:
        type:
          type: string
          enum:
            - short_story
            - mini_novel
            - novel
          description: Story type category
          example: short_story
        count:
          type: integer
          description: Number of stories in this category
          example: 92
        description:
          type: string
          description: Human-readable description of the story type
          example: Quick reads with 1-8 chapters
        chapterRange:
          type: string
          description: Chapter count range for this type
          example: 1-8
        apiEndpoint:
          type: string
          description: API endpoint to fetch stories of this type
          example: /api/stories/by-type?type=short_story&language=en
      required:
        - type
        - count
        - description
        - chapterRange
        - apiEndpoint
    StoryTypesResponse:
      type: object
      properties:
        language:
          type: string
          description: Language code for the results
          example: en
        storyTypes:
          type: array
          items:
            $ref: "#/components/schemas/StoryType"
        totalTypes:
          type: integer
          description: Total number of story types
          example: 3
        usage:
          type: object
          properties:
            example:
              type: string
              description: Example API call
              example: /api/stories/by-type?type=short_story&language=en
            availableTypes:
              type: array
              items:
                type: string
              description: List of available story types
              example: ["short_story", "mini_novel", "novel"]
            parameters:
              type: object
              description: Available query parameters
          required:
            - example
            - availableTypes
            - parameters
      required:
        - language
        - storyTypes
        - totalTypes
        - usage
    StoryByTypeResponse:
      type: object
      properties:
        type:
          type: string
          description: Requested story type
          example: short_story
        typeInfo:
          type: object
          properties:
            description:
              type: string
              description: Description of the story type
              example: Quick reads with 1-8 chapters
            chapterRange:
              type: string
              description: Chapter count range
              example: 1-8
            criteria:
              type: string
              description: Selection criteria
              example: Stories with 1 to 8 chapters
          required:
            - description
            - chapterRange
            - criteria
        language:
          type: string
          description: Language code
          example: en
        stories:
          type: array
          items:
            allOf:
              - $ref: "#/components/schemas/Story"
              - type: object
                properties:
                  storyType:
                    type: string
                    description: Story type category
                    example: short_story
        pagination:
          type: object
          properties:
            page:
              type: integer
              description: Current page number
              example: 1
            limit:
              type: integer
              description: Number of stories per page
              example: 20
            total:
              type: integer
              description: Total number of stories in this category
              example: 92
            hasMore:
              type: boolean
              description: Whether there are more pages
              example: true
            hasPrev:
              type: boolean
              description: Whether there are previous pages
              example: false
            nextPage:
              type: integer
              nullable: true
              description: Next page number (null if none)
              example: 2
            prevPage:
              type: integer
              nullable: true
              description: Previous page number (null if none)
              example: null
          required:
            - page
            - limit
            - total
            - hasMore
            - hasPrev
        meta:
          type: object
          properties:
            totalStories:
              type: integer
              description: Number of stories in current response
              example: 5
            averageChapters:
              type: number
              description: Average chapter count for returned stories
              example: 7.0
            storiesWithAudio:
              type: integer
              description: Number of stories with audio in current response
              example: 0
          required:
            - totalStories
            - averageChapters
            - storiesWithAudio
      required:
        - type
        - typeInfo
        - language
        - stories
        - pagination
        - meta
  parameters: {}
security:
  - bearerAuth: []
tags:
  - name: Stories
    description: Stories related operations
  - name: User
    description: User related operations
  - name: Search
    description: Search related operations
  - name: Content
    description: Content related operations
  - name: Audio
    description: Audio related operations
paths:
  /api/health:
    get:
      tags:
        - System
      summary: Health check endpoint
      description: Returns the current health status of the API
      responses:
        "200":
          description: Health status
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthResponse"
  /api/stories:
    get:
      tags:
        - Stories
      summary: List stories
      description: Get a paginated list of stories with optional filtering
      parameters:
        - schema:
            type: string
          required: false
          name: search
          in: query
        - schema:
            type: string
          required: false
          name: q
          in: query
        - schema:
            type: string
            example: en
          required: false
          name: language
          in: query
        - schema:
            type: string
          required: false
          name: languages
          in: query
        - schema:
            type: string
            example: en
          required: false
          name: audio_language
          in: query
        - schema:
            type: string
          required: false
          name: genre
          in: query
        - schema:
            type: string
          required: false
          name: author
          in: query
        - schema:
            type: string
            example: published
          required: false
          name: status
          in: query
        - schema:
            type: string
          required: false
          name: tags
          in: query
        - schema:
            type: string
          required: false
          name: featured
          in: query
        - schema:
            type: string
            example: newest
          required: false
          name: sort
          in: query
        - schema:
            type: integer
            minimum: 1
            default: 1
          required: false
          name: page
          in: query
        - schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
          required: false
          name: limit
          in: query
        - schema:
            type: string
          required: false
          name: duration
          in: query
      responses:
        "200":
          description: List of stories
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/StoriesListResponse"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/genres:
    get:
      tags:
        - Stories
      summary: List story genres
      description: Get list of available story genres with counts
      responses:
        "200":
          description: List of genres
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/tags:
    get:
      tags:
        - Stories
      summary: List story tags
      description: Get all unique tags from published stories
      responses:
        "200":
          description: List of tags
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/authors:
    get:
      tags:
        - Stories
      summary: List story authors
      description: Get all unique authors from published stories
      responses:
        "200":
          description: List of authors
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/languages:
    get:
      tags:
        - Stories
      summary: List story languages
      description: Get list of available story languages with counts
      responses:
        "200":
          description: List of languages
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/by-type:
    get:
      tags:
        - Stories
      summary: Get stories by type
      description: |
        Get stories categorized by type based on chapter count.

        **Story Type Categories:**
        - **short_story**: 1-8 chapters (Quick reads)
        - **mini_novel**: 9-20 chapters (Medium-length stories)
        - **novel**: 21+ chapters (Full-length novels)

        **Usage:**
        - Without `type` parameter: Returns all story types with counts
        - With `type` parameter: Returns paginated stories of that type
      parameters:
        - schema:
            type: string
            enum:
              - short_story
              - mini_novel
              - novel
            description: Story type to filter by (optional)
            example: short_story
          required: false
          name: type
          in: query
        - schema:
            type: string
            description: Language code (defaults to 'en')
            example: en
          required: false
          name: language
          in: query
        - schema:
            type: integer
            minimum: 1
            default: 1
            description: Page number
            example: 1
          required: false
          name: page
          in: query
        - schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 20
            description: Stories per page
            example: 20
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Story types overview or specific type results
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/StoryTypesResponse"
                  - $ref: "#/components/schemas/StoryByTypeResponse"
                examples:
                  story_types_overview:
                    summary: Story types overview (no type parameter)
                    value:
                      language: "en"
                      storyTypes:
                        - type: "short_story"
                          count: 92
                          description: "Quick reads with 1-8 chapters"
                          chapterRange: "1-8"
                          apiEndpoint: "/api/stories/by-type?type=short_story&language=en"
                        - type: "mini_novel"
                          count: 8
                          description: "Medium-length stories with 9-20 chapters"
                          chapterRange: "9-20"
                          apiEndpoint: "/api/stories/by-type?type=mini_novel&language=en"
                        - type: "novel"
                          count: 2
                          description: "Full-length novels with 21+ chapters"
                          chapterRange: "21-100"
                          apiEndpoint: "/api/stories/by-type?type=novel&language=en"
                      totalTypes: 3
                      usage:
                        example: "/api/stories/by-type?type=short_story&language=en"
                        availableTypes: ["short_story", "mini_novel", "novel"]
                        parameters:
                          type: "Required: short_story, mini_novel, or novel"
                          language: "Optional: language code (default: en)"
                          page: "Optional: page number (default: 1)"
                          limit: "Optional: results per page (default: 20, max: 50)"
                  specific_type_stories:
                    summary: Specific story type results (with type parameter)
                    value:
                      type: "short_story"
                      typeInfo:
                        description: "Quick reads with 1-8 chapters"
                        chapterRange: "1-8"
                        criteria: "Stories with 1 to 8 chapters"
                      language: "en"
                      stories:
                        - id: "trust-no-memory"
                          title: "Trust No Memory"
                          author: "AI Story Generator"
                          genre: "Sci-Fi"
                          language: "en"
                          totalChapters: 8
                          readingTime: 40
                          thumbnailUrl: "/api/content/trust-no-memory/image/en/thumbnail.jpg"
                          hasAudio: false
                          audioChaptersCount: 0
                          totalAudioDuration: 0
                          storyType: "short_story"
                      pagination:
                        page: 1
                        limit: 20
                        total: 92
                        hasMore: true
                        hasPrev: false
                        nextPage: 2
                        prevPage: null
                      meta:
                        totalStories: 1
                        averageChapters: 8.0
                        storiesWithAudio: 0
        "500":
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to fetch stories by type"
  /api/stories/group/{languageGroupId}:
    get:
      tags:
        - Stories
      summary: Get translation group
      description: Get master and translations for a language group
      parameters:
        - schema:
            type: string
          required: true
          name: languageGroupId
          in: path
      responses:
        "200":
          description: Group details
          content:
            application/json:
              schema:
                nullable: true
        "404":
          description: Not found
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/{storyId}:
    get:
      tags:
        - Stories
      summary: Get story details
      description: Get detailed information about a specific story
      parameters:
        - schema:
            type: string
          required: true
          name: storyId
          in: path
      responses:
        "200":
          description: Story details
          content:
            application/json:
              schema:
                nullable: true
        "404":
          description: Story not found
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/suggestions:
    get:
      tags:
        - Stories
      summary: Search suggestions
      description: Return suggestions for stories, authors, and genres
      parameters:
        - schema:
            type: string
          required: false
          name: q
          in: query
        - schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 5
          required: false
          name: limit
          in: query
      responses:
        "200":
          description: Suggestions
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/{id}/audio:
    get:
      tags:
        - Stories
      summary: Get story audio (by chapter)
      description: Serve audio for a given story/chapter with range requests support
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
          required: false
          name: language
          in: query
        - schema:
            type: string
          required: false
          name: chapter
          in: query
      responses:
        "200":
          description: Audio stream
          content:
            audio/mpeg:
              schema:
                nullable: true
        "404":
          description: Not found
          content:
            application/json:
              schema:
                nullable: true
        "500":
          description: Server error
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/{storyId}/chapters/{chapterNumber}/audio:
    get:
      tags:
        - Stories
      summary: Get chapter audio
      description: Serve chapter audio with range requests support
      parameters:
        - schema:
            type: string
          required: true
          name: storyId
          in: path
        - schema:
            type: string
          required: true
          name: chapterNumber
          in: path
        - schema:
            type: string
          required: false
          name: language
          in: query
      responses:
        "200":
          description: Audio stream
          content:
            audio/mpeg:
              schema:
                nullable: true
        "404":
          description: Not found
          content:
            application/json:
              schema:
                nullable: true
        "500":
          description: Server error
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/{storyId}/chapters/audio/manifest:
    get:
      tags:
        - Stories
      summary: Get chapter audio manifest
      description: Return audio manifest for all chapters in a story
      parameters:
        - schema:
            type: string
          required: true
          name: storyId
          in: path
        - schema:
            type: string
          required: false
          name: language
          in: query
      responses:
        "200":
          description: Audio manifest
          content:
            application/json:
              schema:
                nullable: true
        "500":
          description: Server error
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/{storyId}/chapters/metadata:
    post:
      tags:
        - Stories
      summary: Create or update chapter metadata
      description: Create/update chapter metadata used for streaming
      parameters:
        - schema:
            type: string
          required: true
          name: storyId
          in: path
      requestBody:
        content:
          application/json:
            schema:
              nullable: true
      responses:
        "200":
          description: Metadata saved
          content:
            application/json:
              schema:
                nullable: true
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                nullable: true
        "500":
          description: Server error
          content:
            application/json:
              schema:
                nullable: true
  /api/stories/{id}/content:
    post:
      tags:
        - Stories
      summary: Upload story content
      description: Upload text/audio content to R2 and store reference
      parameters:
        - schema:
            type: string
          required: true
          name: id
          in: path
        - schema:
            type: string
          required: false
          name: type
          in: query
        - schema:
            type: string
          required: false
          name: language
          in: query
      responses:
        "200":
          description: Upload result
          content:
            application/json:
              schema:
                nullable: true
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                nullable: true
        "500":
          description: Server error
          content:
            application/json:
              schema:
                nullable: true
  /api/user/progress:
    get:
      tags:
        - User
      summary: Get user progress
      description: Get reading/listening progress for all stories
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: Filter by language code
            example: en
          required: false
          name: language
          in: query
        - schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            description: Number of progress records per page
            example: 20
          required: false
          name: limit
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Number of records to skip
            example: 0
          required: false
          name: offset
          in: query
      responses:
        "200":
          description: User progress records
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProgressResponse"
        "401":
          description: Unauthorized - authentication required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication required
                required:
                  - error
  /api/user/progress/{storyId}:
    post:
      tags:
        - User
      summary: Update story progress
      description: Update reading/listening progress for a specific story
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: Story ID
            example: story_abc123
          required: true
          name: storyId
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProgressUpdateRequest"
      responses:
        "200":
          description: Progress updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProgressUpdateResponse"
        "400":
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid progress data
                required:
                  - error
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication required
                required:
                  - error
  /api/user/bookmarks:
    get:
      tags:
        - User
      summary: Get user bookmarks
      description: Get all bookmarks for the authenticated user
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: string
            description: Filter by story ID
            example: story_abc123
          required: false
          name: story_id
          in: query
        - schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
            description: Number of bookmarks per page
            example: 50
          required: false
          name: limit
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Number of bookmarks to skip
            example: 0
          required: false
          name: offset
          in: query
      responses:
        "200":
          description: User bookmarks
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookmarksResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication required
                required:
                  - error
  /api/user/library:
    get:
      tags:
        - User
      summary: Get user library
      description: Get all stories in user's personal library
      security:
        - bearerAuth: []
      parameters:
        - schema:
            type: boolean
            nullable: true
            default: false
            description: Show only favorite stories
            example: false
          required: false
          name: favorites_only
          in: query
        - schema:
            type: string
            enum:
              - recent
              - title
              - author
              - progress
            default: recent
            description: Sort order
            example: recent
          required: false
          name: sort
          in: query
        - schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
            description: Number of stories per page
            example: 20
          required: false
          name: limit
          in: query
        - schema:
            type: integer
            nullable: true
            minimum: 0
            default: 0
            description: Number of stories to skip
            example: 0
          required: false
          name: offset
          in: query
      responses:
        "200":
          description: User library
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserLibraryResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Authentication required
                required:
                  - error
